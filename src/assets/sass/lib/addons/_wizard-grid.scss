/*--------------------------------------------------------------------------*\
    $CSSWIZARDRY-GRIDS
    by @csswizardy aka Harry Roberts
    modified to have sixteenths and ems by @jwebcat aka Jupiter St. John
\*--------------------------------------------------------------------------*/

/**
 * CONTENTS
 * INTRODUCTION.........How the grid system works.
 * VARIABLES............Your settings.
 * MIXINS...............Library mixins.
 * GRID SETUP...........Build the grid structure.
 * WIDTHS...............Build our responsive widths around our breakpoints.
 * PUSH.................Push classes.
 * PULL.................Pull classes.
 */





/*------------------------------------*\
    $INTRODUCTION
\*------------------------------------*/
/**
 * csswizardry grids provides you with widths to suit a number of breakpoints
 * designed around devices of a size you specify. Out of the box, csswizardry
 * grids caters to the following types of device:
 *
 * palm     --  palm-based devices, like phones and small tablets
 * lap      --  lap-based devices, like iPads or laptops
 * portable --  all of the above
 * desk     --  stationary devices, like desktop computers
 * regular  --  any/all types of device
 *
 * These namespaces are then used in the library to give you the ability to
 * manipulate your layouts based around them, for example:
 *
   <div class="grid__item  one-whole  lap--one-half  desk--one-third">
 *
 * This would give you a grid item which is 100% width unless it is on a lap
 * device, at which point it become 50% wide, or it is on a desktop device, at
 * which point it becomes 33.333% width.
 *
 * csswizardry grids also has push and pull classes which allow you to nudge
 * grid items left and right by a defined amount. These follow the same naming
 * convention as above, but are prepended by either `push--` or `pull--`, for
 * example:
 *
   `class="grid__item  one-half  push--one-half"`
 *
 * This would give you a grid item which is 50% width and pushed over to the
 * right by 50%.
 *
 * All classes in csswizardry grids follow this patten, so you should fairly
 * quickly be able to piece together any combinations you can imagine, for
 * example:
 *
   `class="grid__item  one-whole  lap--one-half  desk--one-third  push--desk--one-third"`
 *
   `class="grid__item  one-quarter  palm--one-half  push--palm--one-half"`
 *
   `class="grid__item  palm--one-third  desk--five-twelfths"`
 */





/*------------------------------------*\
    $VARIABLES
\*------------------------------------*/
/**
 * If you are building a non-responsive site but would still like to use
 * csswizardry-grids, set this to ‘false’:
 */
$responsive:            true!default;


/**
 * Is this build mobile first? Setting to ‘true’ means that all grids will be
 * 100% width if you do not apply a more specific class to them.
 */
$mobile-first:          true!default;


/**
 * Set the spacing between your grid items.
 */
$gutter:                24px!default;   // Set this to a % , em , or rem unit to have flexible gutters


/**
 * Would you like Sass’ silent classes, or regular CSS classes?
 */
$use-silent-classes:    false!default;


/**
 * Would you like push and pull classes enabled?
 */
$push:                  false!default;
$pull:                  false!default;


/**
 * Using `inline-block` means that the grid items need their whitespace removing
 * in order for them to work correctly. Set the following to true if you are
 * going to achieve this by manually removing/commenting out any whitespace in
 * your HTML yourself.
 *
 * Setting this to false invokes a hack which cannot always be guaranteed,
 * please see the following for more detail:
 *
 * github.com/csswizardry/csswizardry-grids/commit/744d4b23c9d2b77d605b5991e54a397df72e0688
 * github.com/csswizardry/inuit.css/issues/170#issuecomment-14859371
 */
$use-markup-fix:        true!default;


/**
 * Define your breakpoints. The first value is the prefix that shall be used for
 * your classes (e.g. `.palm--one-half`), the second value is the media query
 * that the breakpoint fires at.
 */
$breakpoints: (
    'palm' '(max-width: #{$palm})',
    'lap' '(min-width: #{$palm} + .05) and (max-width: #{$portable})',
    'portable' '(max-width: #{$portable})',
    'desk' '(min-width: #{$desk})'
)!default;


/**
 * Define which namespaced breakpoints you would like to generate for each of
 * widths, push and pull. This is handy if you only need pull on, say, desk, or
 * you only need a new width breakpoint at mobile sizes. It allows you to only
 * compile as much CSS as you need. All are turned on by default, but you can
 * add and remove breakpoints at will.
 *
 * Push and pull shall only be used if `$push` and/or `$pull` and `$responsive`
 * have been set to ‘true’.
 */
$breakpoint-has-widths: ('palm', 'lap', 'portable', 'desk')!default;
$breakpoint-has-push:   ('palm', 'lap', 'portable', 'desk')!default;
$breakpoint-has-pull:   ('palm', 'lap', 'portable', 'desk')!default;


/**
 * You do not need to edit anything from this line onward; csswizardry-grids is
 * good to go. Happy griddin’!
 */
$class-type:            unquote(".");

@if $use-silent-classes == true{
    $class-type:        unquote("%");
}





/*------------------------------------*\
    $MIXINS
\*------------------------------------*/
/**
 * These mixins are for the library to use only, you should not need to modify
 * them at all.
 *
 * Enclose a block of code with a media query as named in `$breakpoints`.
 */
@mixin grid-media-query($media-query){
    $breakpoint-found: false;

    @each $breakpoint in $breakpoints{
        $name: nth($breakpoint, 1);
        $declaration: nth($breakpoint, 2);

        @if $media-query == $name and $declaration{
            $breakpoint-found: true;

            @media only screen and #{$declaration}{
                @content;
            }
        }
    }

    @if $breakpoint-found == false{
        @warn "Breakpoint ‘#{$media-query}’ does not exist"
    }
}


/**
 * Drop relative positioning into silent classes which can’t take advantage of
 * the `[class*="push--"]` and `[class*="pull--"]` selectors.
 */
@mixin silent-relative(){
    @if $use-silent-classes == true{
        position:relative;
    }
}





/*------------------------------------*\
    $GRID SETUP
\*------------------------------------*/
/**
 * 1. Allow the grid system to be used on lists.
 * 2. Remove any margins and paddings that might affect the grid system.
 * 3. Apply a negative `margin-left` to negate the columns’ gutters.
 */
#{$class-type}grid{
    list-style:none;                /* [1] */
    margin:0;                       /* [2] */
    padding:0;                      /* [2] */
    margin-left:-$gutter;           /* [3] */
    @if $use-markup-fix != true{
        letter-spacing:-0.31em;
    }
}

@if $use-markup-fix != true{
    /* Opera hack */
    .opera:-o-prefocus,
    #{$class-type}grid{
        word-spacing:-0.43em;
    }
}


    /**
     * 1. Cause columns to stack side-by-side.
     * 2. Space columns apart.
     * 3. Align columns to the tops of each other.
     * 4. Full-width unless told to behave otherwise.
     * 5. Required to combine fluid widths and fixed gutters.
     */
    #{$class-type}grid__item{
        display:inline-block;           /* [1] */
        padding-left:$gutter;           /* [2] */
        vertical-align:top;             /* [3] */
        @if $mobile-first == true{
            width:100%;                 /* [4] */
        }
        -webkit-box-sizing:border-box;  /* [5] */
           -moz-box-sizing:border-box;  /* [5] */
                box-sizing:border-box;  /* [5] */
        @if $use-markup-fix != true{
            letter-spacing:normal;
            word-spacing:normal;
        }
    }


/**
 * Reversed grids allow you to structure your source in the opposite order to
 * how your rendered layout will appear. Extends `.grid`.
 */
#{$class-type}grid--rev{
    direction:rtl;
    text-align:left;

    > #{$class-type}grid__item{
        direction:ltr;
        text-align:left;
    }
}


/**
 * Gutterless grids have all the properties of regular grids, minus any spacing.
 * Extends `.grid`.
 */
#{$class-type}grid--full{
    margin-left:0;

    > #{$class-type}grid__item{
        padding-left:0;
    }
}


/**
 * Align the entire grid to the right. Extends `.grid`.
 */
#{$class-type}grid--right{
    text-align:right;

    > #{$class-type}grid__item{
        text-align:left;
    }
}


/**
 * Centered grids align grid items centrally without needing to use push or pull
 * classes. Extends `.grid`.
 */
#{$class-type}grid--center{
    text-align:center;

    > #{$class-type}grid__item{
        text-align:left;
    }
}


/**
 * Align grid cells vertically (`.grid--middle` or `.grid--bottom`). Extends
 * `.grid`.
 */
#{$class-type}grid--middle{

    > #{$class-type}grid__item{
        vertical-align:middle;
    }
}

#{$class-type}grid--bottom{

    > #{$class-type}grid__item{
        vertical-align:bottom;
    }
}


/**
 * Create grids with narrower gutters. Extends `.grid`.
 */
#{$class-type}grid--narrow{
    margin-left:-($gutter / 2);

    > #{$class-type}grid__item{
        padding-left:$gutter / 2;
    }
}


/**
 * Create grids with wider gutters. Extends `.grid`.
 */
#{$class-type}grid--wide{
    margin-left:-($gutter * 2);

    > #{$class-type}grid__item{
        padding-left:$gutter * 2;
    }
}





/*------------------------------------*\
    $WIDTHS
\*------------------------------------*/
/**
 * Create our width classes, prefixed by the specified namespace.
 */
@mixin device-type($namespace:""){


    /**
     * Whole
     */
    #{$class-type}#{$namespace}one-whole         { width:100%; }


    /**
     * Halves
     */
    #{$class-type}#{$namespace}one-half          { width:50%; }


    /**
     * Thirds
     */
    #{$class-type}#{$namespace}one-third         { width:33.333%; }
    #{$class-type}#{$namespace}two-thirds        { width:66.666%; }


    /**
     * Quarters
     */
    #{$class-type}#{$namespace}one-quarter       { width:25%; }
    #{$class-type}#{$namespace}two-quarters      { @extend #{$class-type}#{$namespace}one-half; }
    #{$class-type}#{$namespace}three-quarters    { width:75%; }


    /**
     * Fifths
     */
    #{$class-type}#{$namespace}one-fifth         { width:20%; }
    #{$class-type}#{$namespace}two-fifths        { width:40%; }
    #{$class-type}#{$namespace}three-fifths      { width:60%; }
    #{$class-type}#{$namespace}four-fifths       { width:80%; }


    /**
     * Sixths
     */
    #{$class-type}#{$namespace}one-sixth         { width:16.666%; }
    #{$class-type}#{$namespace}two-sixths        { @extend #{$class-type}#{$namespace}one-third; }
    #{$class-type}#{$namespace}three-sixths      { @extend #{$class-type}#{$namespace}one-half; }
    #{$class-type}#{$namespace}four-sixths       { @extend #{$class-type}#{$namespace}two-thirds; }
    #{$class-type}#{$namespace}five-sixths       { width:83.333%; }


    /**
     * Eighths
     */
    #{$class-type}#{$namespace}one-eighth        { width:12.5%; }
    #{$class-type}#{$namespace}two-eighths       { @extend #{$class-type}#{$namespace}one-quarter; }
    #{$class-type}#{$namespace}three-eighths     { width:37.5%; }
    #{$class-type}#{$namespace}four-eighths      { @extend #{$class-type}#{$namespace}one-half; }
    #{$class-type}#{$namespace}five-eighths      { width:62.5%; }
    #{$class-type}#{$namespace}six-eighths       { @extend #{$class-type}#{$namespace}three-quarters; }
    #{$class-type}#{$namespace}seven-eighths     { width:87.5%; }


    /**
     * Tenths
     */
    #{$class-type}#{$namespace}one-tenth         { width:10%; }
    #{$class-type}#{$namespace}two-tenths        { @extend #{$class-type}#{$namespace}one-fifth; }
    #{$class-type}#{$namespace}three-tenths      { width:30%; }
    #{$class-type}#{$namespace}four-tenths       { @extend #{$class-type}#{$namespace}two-fifths; }
    #{$class-type}#{$namespace}five-tenths       { @extend #{$class-type}#{$namespace}one-half; }
    #{$class-type}#{$namespace}six-tenths        { @extend #{$class-type}#{$namespace}three-fifths; }
    #{$class-type}#{$namespace}seven-tenths      { width:70%; }
    #{$class-type}#{$namespace}eight-tenths      { @extend #{$class-type}#{$namespace}four-fifths; }
    #{$class-type}#{$namespace}nine-tenths       { width:90%; }


    /**
     * Twelfths
     */
    #{$class-type}#{$namespace}one-twelfth       { width:8.333%; }
    #{$class-type}#{$namespace}two-twelfths      { @extend #{$class-type}#{$namespace}one-sixth; }
    #{$class-type}#{$namespace}three-twelfths    { @extend #{$class-type}#{$namespace}one-quarter; }
    #{$class-type}#{$namespace}four-twelfths     { @extend #{$class-type}#{$namespace}one-third; }
    #{$class-type}#{$namespace}five-twelfths     { width:41.666% }
    #{$class-type}#{$namespace}six-twelfths      { @extend #{$class-type}#{$namespace}one-half; }
    #{$class-type}#{$namespace}seven-twelfths    { width:58.333%; }
    #{$class-type}#{$namespace}eight-twelfths    { @extend #{$class-type}#{$namespace}two-thirds; }
    #{$class-type}#{$namespace}nine-twelfths     { @extend #{$class-type}#{$namespace}three-quarters; }
    #{$class-type}#{$namespace}ten-twelfths      { @extend #{$class-type}#{$namespace}five-sixths; }
    #{$class-type}#{$namespace}eleven-twelfths   { width:91.666%; }


    /**
     * Thirteenths
     */
     #{$class-type}#{$namespace}one-thirteenth       { width: 7.692%; }
     #{$class-type}#{$namespace}two-thirteenths      { width: 15.384%; }
     #{$class-type}#{$namespace}three-thirteenths    { width: 23.076%; }
     #{$class-type}#{$namespace}four-thirteenths     { width: 30.768%; }
     #{$class-type}#{$namespace}five-thirteenths     { width: 38.46%; }
     #{$class-type}#{$namespace}six-thirteenths      { width: 46.152%; }
     #{$class-type}#{$namespace}seven-thirteenths    { width: 53.844%; }
     #{$class-type}#{$namespace}eight-thirteenths    { width: 61.536%; }
     #{$class-type}#{$namespace}nine-thirteenths     { width: 69.228%; }
     #{$class-type}#{$namespace}ten-thirteenths      { width: 76.92%; }
     #{$class-type}#{$namespace}eleven-thirteenths   { width: 84.612%; }
     #{$class-type}#{$namespace}twelve-thirteenths   { width: 92.304%; }


     /**
     * Fourteenths
     */
     #{$class-type}#{$namespace}one-fourteenth       { width: 7.142%; }
     #{$class-type}#{$namespace}two-fourteenths      { width: 14.284%; }
     #{$class-type}#{$namespace}three-fourteenths    { width: 21.426%; }
     #{$class-type}#{$namespace}four-fourteenths     { width: 28.568%; }
     #{$class-type}#{$namespace}five-fourteenths     { width: 35.71%; }
     #{$class-type}#{$namespace}six-fourteenths      { width: 42.852%; }
     #{$class-type}#{$namespace}seven-fourteenths    { @extend #{$class-type}#{$namespace}one-half; }
     #{$class-type}#{$namespace}eight-fourteenths    { width: 57.136%; }
     #{$class-type}#{$namespace}nine-fourteenths     { width: 64.278%; }
     #{$class-type}#{$namespace}ten-fourteenths      { width: 71.42%; }
     #{$class-type}#{$namespace}eleven-fourteenths   { width: 78.562%; }
     #{$class-type}#{$namespace}twelve-fourteenths   { width: 85.704%; }
     #{$class-type}#{$namespace}thirteen-fourteenths { width: 92.846%; }


     /**
     * Fifteenths
     */
     #{$class-type}#{$namespace}one-fifteenth       { width: 6.666%; }
     #{$class-type}#{$namespace}two-fifteenths      { width: 13.332%; }
     #{$class-type}#{$namespace}three-fifteenths    { width: 19.998%; }
     #{$class-type}#{$namespace}four-fifteenths     { width: 26.664%; }
     #{$class-type}#{$namespace}five-fifteenths     { width: 33.33%; }
     #{$class-type}#{$namespace}six-fifteenths      { width: 39.996%; }
     #{$class-type}#{$namespace}seven-fifteenths    { width: 46.662%; }
     #{$class-type}#{$namespace}eight-fifteenths    { width: 53.328%; }
     #{$class-type}#{$namespace}nine-fifteenths     { width: 59.994%; }
     #{$class-type}#{$namespace}ten-fifteenths      { width: 66.66%; }
     #{$class-type}#{$namespace}eleven-fifteenths   { width: 73.326%; }
     #{$class-type}#{$namespace}twelve-fifteenths   { width: 79.992%; }
     #{$class-type}#{$namespace}thirteen-fifteenths { width: 86.658%; }
     #{$class-type}#{$namespace}fourteen-fifteenths { width: 93.324%; }


     /**
     * Sixteenths
     */
     #{$class-type}#{$namespace}one-sixteenth       { width: 6.25%; }
     #{$class-type}#{$namespace}two-sixteenths      { @extend #{$class-type}#{$namespace}one-eighth; }
     #{$class-type}#{$namespace}three-sixteenths    { width: 18.75%; }
     #{$class-type}#{$namespace}four-sixteenths     { @extend #{$class-type}#{$namespace}one-quarter; }
     #{$class-type}#{$namespace}five-sixteenths     { width: 31.25%; }
     #{$class-type}#{$namespace}six-sixteenths      { @extend #{$class-type}#{$namespace}three-eighths; }
     #{$class-type}#{$namespace}seven-sixteenths    { width: 43.75%; }
     #{$class-type}#{$namespace}eight-sixteenths    { @extend #{$class-type}#{$namespace}one-half; }
     #{$class-type}#{$namespace}nine-sixteenths     { width: 56.25%; }
     #{$class-type}#{$namespace}ten-sixteenths      { @extend #{$class-type}#{$namespace}five-eighths; }
     #{$class-type}#{$namespace}eleven-sixteenths   { width: 68.75%; }
     #{$class-type}#{$namespace}twelve-sixteenths   {  @extend #{$class-type}#{$namespace}three-quarters; }
     #{$class-type}#{$namespace}thirteen-sixteenths { width: 81.25%; }
     #{$class-type}#{$namespace}fourteen-sixteenths { @extend #{$class-type}#{$namespace}seven-eighths; }
     #{$class-type}#{$namespace}fifteen-sixteenths  { width: 93.75%; }
}


/**
 * Our regular, non-responsive width classes.
 */
@include device-type();


/**
 * Our responsive classes, if we have enabled them.
 */
@if $responsive == true{

    @each $name in $breakpoint-has-widths {
        @include grid-media-query($name) {
           @include device-type('#{$name}--');
        }
    }


}





/*------------------------------------*\
    $PUSH
\*------------------------------------*/
/**
 * Push classes, to move grid items over to the right by certain amounts.
 */
@mixin push-setup($namespace: ""){

    /**
     * Whole
     */
    #{$class-type}push--#{$namespace}one-whole           { left:100%; @include silent-relative(); }


    /**
     * Halves
     */
    #{$class-type}push--#{$namespace}one-half            { left:50%; @include silent-relative(); }


    /**
     * Thirds
     */
    #{$class-type}push--#{$namespace}one-third           { left:33.333%; @include silent-relative(); }
    #{$class-type}push--#{$namespace}two-thirds          { left:66.666%; @include silent-relative(); }


    /**
     * Quarters
     */
    #{$class-type}push--#{$namespace}one-quarter         { left:25%; @include silent-relative(); }
    #{$class-type}push--#{$namespace}two-quarters        { @extend #{$class-type}push--#{$namespace}one-half; }
    #{$class-type}push--#{$namespace}three-quarters      { left:75%; @include silent-relative(); }


    /**
     * Fifths
     */
    #{$class-type}push--#{$namespace}one-fifth           { left:20%; @include silent-relative(); }
    #{$class-type}push--#{$namespace}two-fifths          { left:40%; @include silent-relative(); }
    #{$class-type}push--#{$namespace}three-fifths        { left:60%; @include silent-relative(); }
    #{$class-type}push--#{$namespace}four-fifths         { left:80%; @include silent-relative(); }


    /**
     * Sixths
     */
    #{$class-type}push--#{$namespace}one-sixth           { left:16.666%; @include silent-relative(); }
    #{$class-type}push--#{$namespace}two-sixths          { @extend #{$class-type}push--#{$namespace}one-third; }
    #{$class-type}push--#{$namespace}three-sixths        { @extend #{$class-type}push--#{$namespace}one-half; }
    #{$class-type}push--#{$namespace}four-sixths         { @extend #{$class-type}push--#{$namespace}two-thirds; }
    #{$class-type}push--#{$namespace}five-sixths         { left:83.333%; @include silent-relative(); }


    /**
     * Eighths
     */
    #{$class-type}push--#{$namespace}one-eighth          { left:12.5%; @include silent-relative(); }
    #{$class-type}push--#{$namespace}two-eighths         { @extend #{$class-type}push--#{$namespace}one-quarter; }
    #{$class-type}push--#{$namespace}three-eighths       { left:37.5%; @include silent-relative(); }
    #{$class-type}push--#{$namespace}four-eighths        { @extend #{$class-type}push--#{$namespace}one-half; }
    #{$class-type}push--#{$namespace}five-eighths        { left:62.5%; @include silent-relative(); }
    #{$class-type}push--#{$namespace}six-eighths         { @extend #{$class-type}push--#{$namespace}three-quarters; }
    #{$class-type}push--#{$namespace}seven-eighths       { left:87.5%; @include silent-relative(); }


    /**
     * Tenths
     */
    #{$class-type}push--#{$namespace}one-tenth           { left:10%; @include silent-relative(); }
    #{$class-type}push--#{$namespace}two-tenths          { @extend #{$class-type}push--#{$namespace}one-fifth; }
    #{$class-type}push--#{$namespace}three-tenths        { left:30%; @include silent-relative(); }
    #{$class-type}push--#{$namespace}four-tenths         { @extend #{$class-type}push--#{$namespace}two-fifths; }
    #{$class-type}push--#{$namespace}five-tenths         { @extend #{$class-type}push--#{$namespace}one-half; }
    #{$class-type}push--#{$namespace}six-tenths          { @extend #{$class-type}push--#{$namespace}three-fifths; }
    #{$class-type}push--#{$namespace}seven-tenths        { left:70%; @include silent-relative(); }
    #{$class-type}push--#{$namespace}eight-tenths        { @extend #{$class-type}push--#{$namespace}four-fifths; }
    #{$class-type}push--#{$namespace}nine-tenths         { left:90%; @include silent-relative(); }


    /**
     * Twelfths
     */
    #{$class-type}push--#{$namespace}one-twelfth         { left:8.333%; @include silent-relative(); }
    #{$class-type}push--#{$namespace}two-twelfths        { @extend #{$class-type}push--#{$namespace}one-sixth; }
    #{$class-type}push--#{$namespace}three-twelfths      { @extend #{$class-type}push--#{$namespace}one-quarter; }
    #{$class-type}push--#{$namespace}four-twelfths       { @extend #{$class-type}push--#{$namespace}one-third; }
    #{$class-type}push--#{$namespace}five-twelfths       { left:41.666%; @include silent-relative(); }
    #{$class-type}push--#{$namespace}six-twelfths        { @extend #{$class-type}push--#{$namespace}one-half; }
    #{$class-type}push--#{$namespace}seven-twelfths      { left:58.333%; @include silent-relative(); }
    #{$class-type}push--#{$namespace}eight-twelfths      { @extend #{$class-type}push--#{$namespace}two-thirds; }
    #{$class-type}push--#{$namespace}nine-twelfths       { @extend #{$class-type}push--#{$namespace}three-quarters; }
    #{$class-type}push--#{$namespace}ten-twelfths        { @extend #{$class-type}push--#{$namespace}five-sixths; }
    #{$class-type}push--#{$namespace}eleven-twelfths     { left:91.666%; @include silent-relative(); }

    /**
     * Thirteenths
     */
     #{$class-type}push--#{$namespace}one-thirteenth       { left: 7.692%; }
     #{$class-type}push--#{$namespace}two-thirteenths      { left: 15.384%; }
     #{$class-type}push--#{$namespace}three-thirteenths    { left: 23.076%; }
     #{$class-type}push--#{$namespace}four-thirteenths     { left: 30.768%; }
     #{$class-type}push--#{$namespace}five-thirteenths     { left: 38.46%; }
     #{$class-type}push--#{$namespace}six-thirteenths      { left: 46.152%; }
     #{$class-type}push--#{$namespace}seven-thirteenths    { left: 53.844%; }
     #{$class-type}push--#{$namespace}eight-thirteenths    { left: 61.536%; }
     #{$class-type}push--#{$namespace}nine-thirteenths     { left: 69.228%; }
     #{$class-type}push--#{$namespace}ten-thirteenths      { left: 76.92%; }
     #{$class-type}push--#{$namespace}eleven-thirteenths   { left: 84.612%; }
     #{$class-type}push--#{$namespace}twelve-thirteenths   { left: 92.304%; }
     /**
     * Fourteenths
     */
     #{$class-type}push--#{$namespace}one-fourteenth       { left: 7.142%; }
     #{$class-type}push--#{$namespace}two-fourteenths      { left: 14.284%; }
     #{$class-type}push--#{$namespace}three-fourteenths    { left: 21.426%; }
     #{$class-type}push--#{$namespace}four-fourteenths     { left: 28.568%; }
     #{$class-type}push--#{$namespace}five-fourteenths     { left: 35.71%; }
     #{$class-type}push--#{$namespace}six-fourteenths      { left: 42.852%; }
     #{$class-type}push--#{$namespace}seven-fourteenths    { @extend #{$class-type}push--#{$namespace}one-half; }
     #{$class-type}push--#{$namespace}eight-fourteenths    { left: 57.136%; }
     #{$class-type}push--#{$namespace}nine-fourteenths     { left: 64.278%; }
     #{$class-type}push--#{$namespace}ten-fourteenths      { left: 71.42%; }
     #{$class-type}push--#{$namespace}eleven-fourteenths   { left: 78.562%; }
     #{$class-type}push--#{$namespace}twelve-fourteenths   { left: 85.704%; }
     #{$class-type}push--#{$namespace}thirteen-fourteenths { left: 92.846%; }
     /**
     * Fifteenths
     */
     #{$class-type}push--#{$namespace}one-fifteenth       { left: 6.666%; }
     #{$class-type}push--#{$namespace}two-fifteenths      { left: 13.332%; }
     #{$class-type}push--#{$namespace}three-fifteenths    { left: 19.998%; }
     #{$class-type}push--#{$namespace}four-fifteenths     { left: 26.664%; }
     #{$class-type}push--#{$namespace}five-fifteenths     { left: 33.33%; }
     #{$class-type}push--#{$namespace}six-fifteenths      { left: 39.996%; }
     #{$class-type}push--#{$namespace}seven-fifteenths    { left: 46.662%; }
     #{$class-type}push--#{$namespace}eight-fifteenths    { left: 53.328%; }
     #{$class-type}push--#{$namespace}nine-fifteenths     { left: 59.994%; }
     #{$class-type}push--#{$namespace}ten-fifteenths      { left: 66.66%; }
     #{$class-type}push--#{$namespace}eleven-fifteenths   { left: 73.326%; }
     #{$class-type}push--#{$namespace}twelve-fifteenths   { left: 79.992%; }
     #{$class-type}push--#{$namespace}thirteen-fifteenths { left: 86.658%; }
     #{$class-type}push--#{$namespace}fourteen-fifteenths { left: 93.324%; }
     /**
     * Sixteenths
     */
     #{$class-type}push--#{$namespace}one-sixteenth       { left: 6.25%; }
     #{$class-type}push--#{$namespace}two-sixteenths      { @extend #{$class-type}push--#{$namespace}one-eighth; }
     #{$class-type}push--#{$namespace}three-sixteenths    { left: 18.75%; }
     #{$class-type}push--#{$namespace}four-sixteenths     { @extend #{$class-type}push--#{$namespace}one-quarter; }
     #{$class-type}push--#{$namespace}five-sixteenths     { left: 31.25%; }
     #{$class-type}push--#{$namespace}six-sixteenths      { @extend #{$class-type}push--#{$namespace}three-eighths; }
     #{$class-type}push--#{$namespace}seven-sixteenths    { left: 43.75%; }
     #{$class-type}push--#{$namespace}eight-sixteenths    { @extend #{$class-type}push--#{$namespace}one-half; }
     #{$class-type}push--#{$namespace}nine-sixteenths     { left: 56.25%; }
     #{$class-type}push--#{$namespace}ten-sixteenths      { @extend #{$class-type}push--#{$namespace}five-eighths; }
     #{$class-type}push--#{$namespace}eleven-sixteenths   { left: 68.75%; }
     #{$class-type}push--#{$namespace}twelve-sixteenths   {  @extend #{$class-type}push--#{$namespace}three-quarters; }
     #{$class-type}push--#{$namespace}thirteen-sixteenths { left: 81.25%; }
     #{$class-type}push--#{$namespace}fourteen-sixteenths { @extend #{$class-type}push--#{$namespace}seven-eighths; }
     #{$class-type}push--#{$namespace}fifteen-sixteenths  { left: 93.75%; }
}

@if $push == true {

    /**
     * Not a particularly great selector, but the DRYest way to do things.
     */
    [class*="push--"]{ position:relative; }


    @include push-setup();


    @if $responsive == true{
        @each $name in $breakpoint-has-push {
            @include grid-media-query($name) {
               @include  push-setup('#{$name}--');
            }
        }
    }


}





/*------------------------------------*\
    $PULL
\*------------------------------------*/
/**
 * Pull classes, to move grid items back to the left by certain amounts.
 */
@mixin pull-setup($namespace: ""){

    /**
     * Whole
     */
    #{$class-type}pull--#{$namespace}one-whole           { right:100%; @include silent-relative(); }


    /**
     * Halves
     */
    #{$class-type}pull--#{$namespace}one-half            { right:50%; @include silent-relative(); }


    /**
     * Thirds
     */
    #{$class-type}pull--#{$namespace}one-third           { right:33.333%; @include silent-relative(); }
    #{$class-type}pull--#{$namespace}two-thirds          { right:66.666%; @include silent-relative(); }


    /**
     * Quarters
     */
    #{$class-type}pull--#{$namespace}one-quarter         { right:25%; @include silent-relative(); }
    #{$class-type}pull--#{$namespace}two-quarters        { @extend #{$class-type}pull--#{$namespace}one-half; }
    #{$class-type}pull--#{$namespace}three-quarters      { right:75%; @include silent-relative(); }


    /**
     * Fifths
     */
    #{$class-type}pull--#{$namespace}one-fifth           { right:20%; @include silent-relative(); }
    #{$class-type}pull--#{$namespace}two-fifths          { right:40%; @include silent-relative(); }
    #{$class-type}pull--#{$namespace}three-fifths        { right:60%; @include silent-relative(); }
    #{$class-type}pull--#{$namespace}four-fifths         { right:80%; @include silent-relative(); }


    /**
     * Sixths
     */
    #{$class-type}pull--#{$namespace}one-sixth           { right:16.666%; @include silent-relative(); }
    #{$class-type}pull--#{$namespace}two-sixths          { @extend #{$class-type}pull--#{$namespace}one-third; }
    #{$class-type}pull--#{$namespace}three-sixths        { @extend #{$class-type}pull--#{$namespace}one-half; }
    #{$class-type}pull--#{$namespace}four-sixths         { @extend #{$class-type}pull--#{$namespace}two-thirds; }
    #{$class-type}pull--#{$namespace}five-sixths         { right:83.333%; @include silent-relative(); }


    /**
     * Eighths
     */
    #{$class-type}pull--#{$namespace}one-eighth          { right:12.5%; @include silent-relative(); }
    #{$class-type}pull--#{$namespace}two-eighths         { @extend #{$class-type}pull--#{$namespace}one-quarter; }
    #{$class-type}pull--#{$namespace}three-eighths       { right:37.5%; @include silent-relative(); }
    #{$class-type}pull--#{$namespace}four-eighths        { @extend #{$class-type}pull--#{$namespace}one-half; }
    #{$class-type}pull--#{$namespace}five-eighths        { right:62.5%; @include silent-relative(); }
    #{$class-type}pull--#{$namespace}six-eighths         { @extend #{$class-type}pull--#{$namespace}three-quarters; }
    #{$class-type}pull--#{$namespace}seven-eighths       { right:87.5%; @include silent-relative(); }


    /**
     * Tenths
     */
    #{$class-type}pull--#{$namespace}one-tenth           { right:10%; @include silent-relative(); }
    #{$class-type}pull--#{$namespace}two-tenths          { @extend #{$class-type}pull--#{$namespace}one-fifth; }
    #{$class-type}pull--#{$namespace}three-tenths        { right:30%; @include silent-relative(); }
    #{$class-type}pull--#{$namespace}four-tenths         { @extend #{$class-type}pull--#{$namespace}two-fifths; }
    #{$class-type}pull--#{$namespace}five-tenths         { @extend #{$class-type}pull--#{$namespace}one-half; }
    #{$class-type}pull--#{$namespace}six-tenths          { @extend #{$class-type}pull--#{$namespace}three-fifths; }
    #{$class-type}pull--#{$namespace}seven-tenths        { right:70%; @include silent-relative(); }
    #{$class-type}pull--#{$namespace}eight-tenths        { @extend #{$class-type}pull--#{$namespace}four-fifths; }
    #{$class-type}pull--#{$namespace}nine-tenths         { right:90%; @include silent-relative(); }


    /**
     * Twelfths
     */
    #{$class-type}pull--#{$namespace}one-twelfth         { right:8.333%; @include silent-relative(); }
    #{$class-type}pull--#{$namespace}two-twelfths        { @extend #{$class-type}pull--#{$namespace}one-sixth; }
    #{$class-type}pull--#{$namespace}three-twelfths      { @extend #{$class-type}pull--#{$namespace}one-quarter; }
    #{$class-type}pull--#{$namespace}four-twelfths       { @extend #{$class-type}pull--#{$namespace}one-third; }
    #{$class-type}pull--#{$namespace}five-twelfths       { right:41.666%; @include silent-relative(); }
    #{$class-type}pull--#{$namespace}six-twelfths        { @extend #{$class-type}pull--#{$namespace}one-half; }
    #{$class-type}pull--#{$namespace}seven-twelfths      { right:58.333%; @include silent-relative(); }
    #{$class-type}pull--#{$namespace}eight-twelfths      { @extend #{$class-type}pull--#{$namespace}two-thirds; }
    #{$class-type}pull--#{$namespace}nine-twelfths       { @extend #{$class-type}pull--#{$namespace}three-quarters; }
    #{$class-type}pull--#{$namespace}ten-twelfths        { @extend #{$class-type}pull--#{$namespace}five-sixths; }
    #{$class-type}pull--#{$namespace}eleven-twelfths     { right:91.666%; @include silent-relative(); }


    /**
     * Thirteenths
     */
     #{$class-type}pull--#{$namespace}one-thirteenth       { right: 7.692%; }
     #{$class-type}pull--#{$namespace}two-thirteenths      { right: 15.384%; }
     #{$class-type}pull--#{$namespace}three-thirteenths    { right: 23.076%; }
     #{$class-type}pull--#{$namespace}four-thirteenths     { right: 30.768%; }
     #{$class-type}pull--#{$namespace}five-thirteenths     { right: 38.46%; }
     #{$class-type}pull--#{$namespace}six-thirteenths      { right: 46.152%; }
     #{$class-type}pull--#{$namespace}seven-thirteenths    { right: 53.844%; }
     #{$class-type}pull--#{$namespace}eight-thirteenths    { right: 61.536%; }
     #{$class-type}pull--#{$namespace}nine-thirteenths     { right: 69.228%; }
     #{$class-type}pull--#{$namespace}ten-thirteenths      { right: 76.92%; }
     #{$class-type}pull--#{$namespace}eleven-thirteenths   { right: 84.612%; }
     #{$class-type}pull--#{$namespace}twelve-thirteenths   { right: 92.304%; }


     /**
     * Fourteenths
     */
     #{$class-type}pull--#{$namespace}one-fourteenth       { right: 7.142%; }
     #{$class-type}pull--#{$namespace}two-fourteenths      { right: 14.284%; }
     #{$class-type}pull--#{$namespace}three-fourteenths    { right: 21.426%; }
     #{$class-type}pull--#{$namespace}four-fourteenths     { right: 28.568%; }
     #{$class-type}pull--#{$namespace}five-fourteenths     { right: 35.71%; }
     #{$class-type}pull--#{$namespace}six-fourteenths      { right: 42.852%; }
     #{$class-type}pull--#{$namespace}seven-fourteenths    { @extend #{$class-type}pull--#{$namespace}one-half; }
     #{$class-type}pull--#{$namespace}eight-fourteenths    { right: 57.136%; }
     #{$class-type}pull--#{$namespace}nine-fourteenths     { right: 64.278%; }
     #{$class-type}pull--#{$namespace}ten-fourteenths      { right: 71.42%; }
     #{$class-type}pull--#{$namespace}eleven-fourteenths   { right: 78.562%; }
     #{$class-type}pull--#{$namespace}twelve-fourteenths   { right: 85.704%; }
     #{$class-type}pull--#{$namespace}thirteen-fourteenths { right: 92.846%; }


     /**
     * Fifteenths
     */
     #{$class-type}pull--#{$namespace}one-fifteenth       { right: 6.666%; }
     #{$class-type}pull--#{$namespace}two-fifteenths      { right: 13.332%; }
     #{$class-type}pull--#{$namespace}three-fifteenths    { right: 19.998%; }
     #{$class-type}pull--#{$namespace}four-fifteenths     { right: 26.664%; }
     #{$class-type}pull--#{$namespace}five-fifteenths     { right: 33.33%; }
     #{$class-type}pull--#{$namespace}six-fifteenths      { right: 39.996%; }
     #{$class-type}pull--#{$namespace}seven-fifteenths    { right: 46.662%; }
     #{$class-type}pull--#{$namespace}eight-fifteenths    { right: 53.328%; }
     #{$class-type}pull--#{$namespace}nine-fifteenths     { right: 59.994%; }
     #{$class-type}pull--#{$namespace}ten-fifteenths      { right: 66.66%; }
     #{$class-type}pull--#{$namespace}eleven-fifteenths   { right: 73.326%; }
     #{$class-type}pull--#{$namespace}twelve-fifteenths   { right: 79.992%; }
     #{$class-type}pull--#{$namespace}thirteen-fifteenths { right: 86.658%; }
     #{$class-type}pull--#{$namespace}fourteen-fifteenths { right: 93.324%; }


     /**
     * Sixteenths
     */
     #{$class-type}pull--#{$namespace}one-sixteenth       { right: 6.25%; }
     #{$class-type}pull--#{$namespace}two-sixteenths      { @extend #{$class-type}pull--#{$namespace}one-eighth; }
     #{$class-type}pull--#{$namespace}three-sixteenths    { right: 18.75%; }
     #{$class-type}pull--#{$namespace}four-sixteenths     { @extend #{$class-type}pull--#{$namespace}one-quarter; }
     #{$class-type}pull--#{$namespace}five-sixteenths     { right: 31.25%; }
     #{$class-type}pull--#{$namespace}six-sixteenths      { @extend #{$class-type}pull--#{$namespace}three-eighths; }
     #{$class-type}pull--#{$namespace}seven-sixteenths    { right: 43.75%; }
     #{$class-type}pull--#{$namespace}eight-sixteenths    { @extend #{$class-type}pull--#{$namespace}one-half; }
     #{$class-type}pull--#{$namespace}nine-sixteenths     { right: 56.25%; }
     #{$class-type}pull--#{$namespace}ten-sixteenths      { @extend #{$class-type}pull--#{$namespace}five-eighths; }
     #{$class-type}pull--#{$namespace}eleven-sixteenths   { right: 68.75%; }
     #{$class-type}pull--#{$namespace}twelve-sixteenths   {  @extend #{$class-type}pull--#{$namespace}three-quarters; }
     #{$class-type}pull--#{$namespace}thirteen-sixteenths { right: 81.25%; }
     #{$class-type}pull--#{$namespace}fourteen-sixteenths { @extend #{$class-type}pull--#{$namespace}seven-eighths; }
     #{$class-type}pull--#{$namespace}fifteen-sixteenths  { right: 93.75%; }
}

@if $pull == true{

    /**
     * Not a particularly great selector, but the DRYest way to do things.
     */
    [class*="pull--"]{ position:relative; }


    @include pull-setup();


    @if $responsive == true{
        @each $name in $breakpoint-has-pull {
            @include grid-media-query($name) {
               @include  pull-setup('#{$name}--');
            }
        }
    }


}

